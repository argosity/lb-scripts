#!/usr/bin/env ruby

require 'faye'
require 'skr/core'
require 'skr/api'
require 'skr/access'
require 'skr/workspace/pub_sub'
require 'bundler'
require 'eventmachine'

SECRETS=YAML.load(File.read("secrets.yml"))

Skr::Workspace.configure do | conf |
    conf.pubsub_host = SECRETS['pubsub']['endpoint']
    conf.pubsub_key  = SECRETS['pubsub']['key']
end

Bundler.setup(:default)

Skr::Core::DB.connect(SECRETS['db'])


EM.run do
    Skr::Workspace.broadcast_model_changes!

    c=Skr::Customer.order(:code).first
    ids = [c.billing_address_id, c.shipping_address_id]

    EM.add_periodic_timer(10) do
        sample = Skr::Address.find((rand*450).to_i+1)
        keys = sample.attributes.keys.reject{ |attr| attr=~/id/ || attr=~/_at/ }
        key = keys.sample
        update = {}
        update[key] = sample[key]
        puts "updating: #{update}"
        Skr::Address.find(ids.sample).update_attributes!(update)
    end
end
